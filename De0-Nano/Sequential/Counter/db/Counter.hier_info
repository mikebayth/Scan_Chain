|Counter
clock_50 => ~NO_FANOUT~
TDI => Scan_Chain:SC.TDI
TDO <= Scan_Chain:SC.TDO
TMS => Scan_Chain:SC.TMS
TCLK => Scan_Chain:SC.TCLK
TRST => Scan_Chain:SC.TRST
LED[0] <= Count:DUT.count[0]
LED[1] <= Count:DUT.count[1]
LED[2] <= Count:DUT.count[2]
LED[3] <= Count:DUT.count[3]
LED[4] <= Count:DUT.count[4]
LED[5] <= Count:DUT.count[5]
LED[6] <= Count:DUT.count[6]
LED[7] <= Count:DUT.count[7]


|Counter|Scan_Chain:SC
TDI => Scan_reg:In_Reg.SI
TDO <= Scan_reg:Out_Reg.SO
TMS => next_state.DATAB
TMS => next_state.DATAB
TMS => L2_en.DATAB
TMS => next_state.DATAB
TMS => Selector0.IN2
TMS => Selector1.IN1
TMS => Selector2.IN1
TMS => Selector3.IN1
TCLK => Scan_reg:In_Reg.clock
TCLK => Scan_reg:Out_Reg.clock
TCLK => current_state~1.DATAIN
TRST => L1_en.OUTPUTSELECT
TRST => L2_en.OUTPUTSELECT
TRST => cap_shft.OUTPUTSELECT
TRST => Scan_reg:In_Reg.reset
TRST => Scan_reg:Out_Reg.reset
TRST => current_state~3.DATAIN
TRST => Scan_reg:In_Reg.sel_reg
TRST => Scan_reg:Out_Reg.sel_reg
TRST => state[2]$latch.LATCH_ENABLE
TRST => state[1]$latch.LATCH_ENABLE
TRST => state[0]$latch.LATCH_ENABLE
TRST => next_state.s_update_134.LATCH_ENABLE
TRST => next_state.s_capture_148.LATCH_ENABLE
TRST => next_state.s_DR_155.LATCH_ENABLE
TRST => next_state.s_idle_162.LATCH_ENABLE
TRST => next_state.s_shift_141.LATCH_ENABLE
dut_in[0] <= Scan_reg:In_Reg.PO[0]
dut_in[1] <= Scan_reg:In_Reg.PO[1]
dut_out[0] => Scan_reg:Out_Reg.PI[0]
dut_out[1] => Scan_reg:Out_Reg.PI[1]
dut_out[2] => Scan_reg:Out_Reg.PI[2]
dut_out[3] => Scan_reg:Out_Reg.PI[3]
dut_out[4] => Scan_reg:Out_Reg.PI[4]
dut_out[5] => Scan_reg:Out_Reg.PI[5]
dut_out[6] => Scan_reg:Out_Reg.PI[6]
dut_out[7] => Scan_reg:Out_Reg.PI[7]
state[0] <= state[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
state[3] <= <GND>
state[4] <= <GND>
state[5] <= <GND>
state[6] <= <GND>
state[7] <= <GND>


|Counter|Scan_Chain:SC|Scan_reg:In_Reg
clock => L2[0].CLK
clock => L2[1].CLK
clock => L1[0].CLK
clock => L1[1].CLK
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
PI[0] => mux1[0].DATAB
PI[0] => mux2.DATAB
PI[1] => mux1[1].DATAB
PI[1] => mux2.DATAB
PO[0] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[1] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
SI => mux1[1].DATAA
SO <= L1[0].DB_MAX_OUTPUT_PORT_TYPE
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
cap_shft => mux1[1].OUTPUTSELECT
cap_shft => mux1[0].OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT


|Counter|Scan_Chain:SC|Scan_reg:Out_Reg
clock => L2[0].CLK
clock => L2[1].CLK
clock => L2[2].CLK
clock => L2[3].CLK
clock => L2[4].CLK
clock => L2[5].CLK
clock => L2[6].CLK
clock => L2[7].CLK
clock => L1[0].CLK
clock => L1[1].CLK
clock => L1[2].CLK
clock => L1[3].CLK
clock => L1[4].CLK
clock => L1[5].CLK
clock => L1[6].CLK
clock => L1[7].CLK
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L1.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
reset => L2.OUTPUTSELECT
PI[0] => mux1[0].DATAB
PI[0] => mux2.DATAB
PI[1] => mux1[1].DATAB
PI[1] => mux2.DATAB
PI[2] => mux1[2].DATAB
PI[2] => mux2.DATAB
PI[3] => mux1[3].DATAB
PI[3] => mux2.DATAB
PI[4] => mux1[4].DATAB
PI[4] => mux2.DATAB
PI[5] => mux1[5].DATAB
PI[5] => mux2.DATAB
PI[6] => mux1[6].DATAB
PI[6] => mux2.DATAB
PI[7] => mux1[7].DATAB
PI[7] => mux2.DATAB
PO[0] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[1] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[2] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[3] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[4] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[5] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[6] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
PO[7] <= mux2.DB_MAX_OUTPUT_PORT_TYPE
SI => mux1[7].DATAA
SO <= L1[0].DB_MAX_OUTPUT_PORT_TYPE
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L1_en => L1.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
L2_en => L2.OUTPUTSELECT
cap_shft => mux1[7].OUTPUTSELECT
cap_shft => mux1[6].OUTPUTSELECT
cap_shft => mux1[5].OUTPUTSELECT
cap_shft => mux1[4].OUTPUTSELECT
cap_shft => mux1[3].OUTPUTSELECT
cap_shft => mux1[2].OUTPUTSELECT
cap_shft => mux1[1].OUTPUTSELECT
cap_shft => mux1[0].OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT
sel_reg => mux2.OUTPUTSELECT


|Counter|Count:DUT
clock => cnt[0].CLK
clock => cnt[1].CLK
clock => cnt[2].CLK
clock => cnt[3].CLK
clock => cnt[4].CLK
clock => cnt[5].CLK
clock => cnt[6].CLK
clock => cnt[7].CLK
reset => cnt[0].ACLR
reset => cnt[1].ACLR
reset => cnt[2].ACLR
reset => cnt[3].ACLR
reset => cnt[4].ACLR
reset => cnt[5].ACLR
reset => cnt[6].ACLR
reset => cnt[7].ACLR
count[0] <= cnt[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= cnt[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= cnt[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= cnt[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= cnt[4].DB_MAX_OUTPUT_PORT_TYPE
count[5] <= cnt[5].DB_MAX_OUTPUT_PORT_TYPE
count[6] <= cnt[6].DB_MAX_OUTPUT_PORT_TYPE
count[7] <= cnt[7].DB_MAX_OUTPUT_PORT_TYPE


